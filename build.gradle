plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
	id "com.google.protobuf" version "0.9.1"
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'com.google.protobuf:protobuf-java:3.21.9'
	implementation 'com.google.guava:guava:31.1-jre'
	implementation 'com.google.code.gson:gson:2.10'
	implementation 'io.grpc:grpc-all:1.50.2'

	runtimeOnly 'com.google.protobuf:protobuf-java-util:3.21.9'
	runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

protobuf{
	protoc {artifact = "com.google.protobuf:protoc:3.13.0"}
	plugins{
		grpc {artifact = "io.grpc:protoc-gen-grpc-java:1.31.1"}
	}
	generateProtoTasks{
		all()*.plugins {grpc {}}
	}
}

sourceSets{
	main{
		proto{
			srcDirs 'src/main/proto'
		}
		java{
			srcDirs 'build/generated/source/proto/main/grpc'
			srcDirs 'build/generated/source/proto/main/java'
		}
	}
}

tasks.withType(Copy) {
	filesMatching("**/*.proto") {
		duplicatesStrategy = DuplicatesStrategy.INCLUDE
	}
}
